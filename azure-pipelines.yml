trigger: none

variables:
   
  buildConfiguration: 'Release'
  webRepository: 'web'
  leaderboardRepository: 'leaderboard'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'secret'

stages:
- stage: 'Build'
  displayName: 'Build and push'
  jobs:  
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
    - task: Docker@2
      displayName: 'Build and push the image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(webRepository)
        dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.Web/Dockerfile'
        containerRegistry: 'docker1'
        tags: |
          $(tag)

    - task: Docker@2
      displayName: 'Build and push the leaderboard image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(leaderboardRepository)
        dockerfile: '$(Build.SourcesDirectory)/Tailspin.SpaceGame.LeaderboardContainer/Dockerfile'
        containerRegistry: 'docker1'
        tags: |
         $(tag)
        
    - publish: '$(Build.SourcesDirectory)/manifests'
      artifact: manifests

- stage: 'Deploy'
  displayName: 'Deploy the container'
  dependsOn: Build
  jobs:
  - deployment: 'Deploy' 
    displayName: 'Deploy job'
    pool:
      vmImage: 'ubuntu-20.04'
      Environment: spike.default
    variables:
    - group: stage
    strategy:
     runOnce:
      deploy:
          steps:
          - download: current
            artifact: manifests 

          - task: AzureWebAppContainer@1
            inputs:
                appName: $(WebAppName)
                azureSubscription: 'service1'
                imageName: $(RegistryName)/$(webRepository):$(build.buildId)

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
             action: createSecret
             secretName: $(imagePullSecret)
             dockerRegistryEndpoint: 'docker1'
             kubernetesServiceConnection: 'kubernetes1'
             namespace: 'default'
        
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
               action: deploy
               kubernetesServiceConnection: 'kubernetes1'
               namespace: 'default'
               manifests: |
                  $(Pipeline.Workspace)/manifests/deployment.yml
                  $(Pipeline.Workspace)/manifests/service.yml
                   imagePullSecrets: |
                      $(imagePullSecret)
               containers: |
                   $(RegistryName)/$(webRepository):$(tag)
                   $(RegistryName)/$(leaderboardRepository):$(tag)